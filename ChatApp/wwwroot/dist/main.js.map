{"version":3,"sources":["../$_lazy_route_resource lazy namespace object","./app/account/login.component.ts","./app/account/login.component.html","./app/account/register.component.ts","./app/account/register.component.html","./app/app-routing.module.ts","./app/app.component.ts","./app/app.component.html","./app/app.module.ts","./app/home/home.component.ts","./app/home/home.component.html","./app/models/message.ts","./app/services/account.service.ts","./app/services/chat.service.ts","./environments/environment.ts","./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  isError = false;\r\n  returnUrl: string;\r\n  errorMsg: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService\r\n  ) {\r\n    if (this.accountService.getUserInfo) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      userEmail: ['', [Validators.required, Validators.email]]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.accountService.login(this.f.userEmail.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {          \r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error => {\r\n          this.isError = true;\r\n          this.errorMsg = error.error.message;\r\n          this.loading = false;\r\n        });\r\n  }\r\n\r\n  onKeyUpEvent(event: any) {\r\n    this.isError = false;\r\n    this.errorMsg = '';\r\n  }\r\n}\r\n","<div class=\"row d-flex justify-content-center mt-5\">\r\n  <div class=\"card col-5\">\r\n    <div class=\"card-body pb-0\">\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label>Email</label>\r\n          <input type=\"text\" formControlName=\"userEmail\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userEmail.errors }\" placeholder=\"Ex : abc@gmail.com\" (keyup)=\"onKeyUpEvent($event)\" />\r\n          <div *ngIf=\"submitted && f.userEmail.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.userEmail.errors.required\">Email is required</div>\r\n            <div *ngIf=\"f.userEmail.errors.email\">Email must be a valid email address</div>\r\n          </div>\r\n          <div *ngIf=\"submitted && isError\" class=\"custom-invalid-feedback\">\r\n            {{errorMsg}}\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Login\r\n          </button>\r\n          <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n@Component({ templateUrl: 'register.component.html' })\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  loading = false;\r\n  submitted = false;\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService,\r\n  ) {\r\n    // redirect to home if already logged in\r\n    // if (this.accountService.userValue) {\r\n    //     this.router.navigate(['/']);\r\n    // }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    //this.accountService.register(this.form.value)\r\n    //  .pipe(first())\r\n    //  .subscribe(\r\n    //    data => {\r\n    //      this.alertService.success('Registration successful', { keepAfterRouteChange: true });\r\n    //      this.router.navigate(['../login'], { relativeTo: this.route });\r\n    //    },\r\n    //    error => {\r\n    //      this.alertService.error(error);\r\n    //      this.loading = false;\r\n    //    });\r\n  }\r\n\r\n  onReset() {\r\n    this.submitted = false;\r\n    this.registerForm.reset();\r\n  }\r\n}\r\n","<!--<div class=\"card mt-5\">\r\n  <div class=\"card-body pb-0\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <h6 for=\"firstName\">First Name</h6>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" placeholder=\"Rakib\"/>\r\n        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <h6 for=\"lastName\">Last Name</h6>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" placeholder=\"Khan\"/>\r\n        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <h6 for=\"userEmail\">Username</h6>\r\n        <input type=\"text\" formControlName=\"userEmail\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userEmail.errors }\" placeholder=\"Ex : abc@gmail.com\"/>\r\n        <div *ngIf=\"submitted && f.userEmail.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.userEmail.errors.required\">Email is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n          <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n          Register\r\n        </button>\r\n        <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>-->\r\n\r\n<div class=\"row d-flex justify-content-center mt-5\">\r\n  <div class=\"card m-3\">\r\n    <div class=\"card-body pb-0\">\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group col-6\">\r\n            <label>First Name</label>\r\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group col-6\">\r\n            <label>Last Name</label>\r\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Email</label>\r\n          <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Register\r\n          </button>\r\n          <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"alert alert-success alert-dismissible\">\r\n  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\r\n  <strong>Success!</strong> This alert box could indicate a successful or positive action.\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './account/login.component';\r\nimport { RegisterComponent } from './account/register.component';\r\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  //imports: [RouterModule.forRoot(routes, { useHash: true })],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\r\nimport { User } from './models/user';\r\nimport { AccountService } from './services/account.service';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chat-app';\n  user: User;\n\n  constructor(private accountService: AccountService, private router: Router) {\n    this.accountService.user.subscribe(x => this.user = x);\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <span class=\"navbar-brand mb-0 h1\">Chat-demo application</span>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarText\" *ngIf=\"user\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n    </ul>\r\n    <span class=\"navbar-text\">\r\n      {{user.firstName}} {{user.lastName}}\r\n    </span>\r\n    <a (click)=\"logout()\" class=\"btn btn-link\">Logout</a>\r\n  </div>\r\n</nav>\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './account/login.component';\r\nimport { RegisterComponent } from './account/register.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ChatService } from './services/chat.service';\r\nimport { AccountService } from './services/account.service';\r\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\r\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ChatService, AccountService], // { provide: LocationStrategy, useClass: PathLocationStrategy }\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Message } from '../models/message';\r\nimport { ChatService } from '../services/chat.service';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n@Component({\r\n  templateUrl: 'home.component.html',\r\n  styleUrls: ['home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  title = 'ClientApp';\r\n  txtMessage: string = '';\r\n  uniqueID: string = new Date().getTime().toString();\r\n  messages = new Array<Message>();\r\n  message = new Message();\r\n\r\n  constructor(\r\n    private chatService: ChatService,\r\n    private _ngZone: NgZone,\r\n    private accountService: AccountService,\r\n    private router: Router,\r\n  ) {\r\n    //this.subscribeToEvents();\r\n    if (this.accountService.getUserInfo) {\r\n      this.router.navigate(['/']);\r\n    }\r\n    else\r\n      this.router.navigate(['/login']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage(): void {\r\n    if (this.txtMessage) {\r\n      this.message = new Message();\r\n      this.message.clientuniqueid = this.uniqueID;\r\n      this.message.type = \"sent\";\r\n      this.message.message = this.txtMessage;\r\n      this.message.date = new Date();\r\n      this.messages.push(this.message);\r\n      this.chatService.sendMessage(this.message);\r\n      this.txtMessage = '';\r\n    }\r\n  }\r\n\r\n  private subscribeToEvents(): void {\r\n    this.chatService.messageReceived.subscribe((message: Message) => {\r\n      this._ngZone.run(() => {\r\n        if (message.clientuniqueid !== this.uniqueID) {\r\n          message.type = \"received\";\r\n          this.messages.push(message);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row d-flex justify-content-center mt-5\" style=\"height:500px;\">\r\n  <div class=\"col-2 pt-3 border\">\r\n    <div class=\"d-flex mb-2\">\r\n      <div class=\"position-relative w-12 h-12\">\r\n        <img class=\"rounded-full border border-gray-100 shadow-sm\" src=\"avatar.png\" alt=\"user image\" />\r\n        <div class=\"absolute top-0 right-0 h-3 w-3 my-1 border-2 border-white rounded-full bg-green-400 z-2\"></div>\r\n      </div>\r\n      <span class=\"align-self-center ml-2 text-muted h6\">Rakib</span>\r\n    </div>\r\n    <div class=\"d-flex mb-2\">\r\n      <div class=\"position-relative w-12 h-12\">\r\n        <img class=\"rounded-full border border-gray-100 shadow-sm\" src=\"avatar.png\" alt=\"user image\" />\r\n        <div class=\"absolute top-0 right-0 h-3 w-3 my-1 border-2 border-white rounded-full bg-green-400 z-2\"></div>\r\n      </div>\r\n      <span class=\"align-self-center ml-2 text-muted h6\">Afnan</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-6 border border-left-0\">\r\n    <div class=\"row border-bottom\" style=\"height:450px;\">sdf</div>\r\n    <div class=\"row pt-1\">\r\n      <div class=\"col pr-0\"><input class=\"form-control\" type=\"text\" placeholder=\"Aa\"/></div>\r\n      <button type=\"submit\" class=\"btn btn-primary mr-2\">Send</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!--<div class=\"row mt-3\">\r\n  <div class=\"col-sm-2 pr-0\">\r\n    <div class=\"card mb-3\" style=\"height:500px;\">\r\n      <div class=\"card-body\">\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-5 pl-0\">\r\n    <div class=\"card border-left-0 mb-3\" style=\"height:500px;\">\r\n      <div class=\"card-header bg-transparent\">Header</div>\r\n      <div class=\"card-body\">\r\n\r\n      </div>\r\n      <div class=\"card-footer bg-transparent\">\r\n\r\n        <div class=\"form-inline\">\r\n          <input class=\"form-control col-10\" type=\"text\" placeholder=\".form-control-lg\">\r\n          <button type=\"submit\" class=\"btn btn-primary ml-2\">Send</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>-->\r\n<!--<div class=\"container\">\r\n  <h3 class=\" text-center chat_header\">Chat Application</h3>\r\n  <div class=\"messaging\">\r\n    <div class=\"inbox_msg\">\r\n      <div class=\"mesgs\">\r\n        <div class=\"msg_history\">\r\n          <div *ngFor=\"let msg of messages\">\r\n            <div class=\"incoming_msg\" *ngIf=\"msg.type == 'received'\">\r\n              <div class=\"incoming_msg_img\"> </div>\r\n              <div class=\"received_msg\">\r\n                <div class=\"received_withd_msg\">\r\n                  <p>\r\n                    {{msg.message}}\r\n                  </p>\r\n                  <span class=\"time_date\"> {{msg.date | date:'medium'}} </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"outgoing_msg\" *ngIf=\"msg.type == 'sent'\">\r\n              <div class=\"sent_msg\">\r\n                <p>\r\n                  {{msg.message}}\r\n                </p>\r\n                <span class=\"time_date\"> {{msg.date | date:'medium'}}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"type_msg\">\r\n          <div class=\"input_msg_write\">\r\n            <input type=\"text\" class=\"write_msg\" [value]=\"txtMessage\"\r\n                   (input)=\"txtMessage=$event.target.value\" (keydown.enter)=\"sendMessage()\" placeholder=\"Type a message\" />\r\n            <button class=\"msg_send_btn\" type=\"button\" (click)=\"sendMessage()\"><i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>-->\r\n","export class Message {\r\n  clientuniqueid: string;\r\n  type: string;\r\n  message: string;\r\n  date: Date;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { throwError as observableThrowError, Observable, BehaviorSubject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { User } from '../models/user';\r\nimport { Router } from '@angular/router';\r\n\n\n@Injectable()\nexport class AccountService {\n\n  private userSubject: BehaviorSubject<User>;\r\n  public user: Observable<User>;\n\n  constructor(\r\n    private router: Router,\r\n    private _http: HttpClient\r\n  ) {\r\n    this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n    this.user = this.userSubject.asObservable();\r\n  }\n\n  setUserInfo(user: User) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  public get getUserInfo(): User {\r\n    return this.userSubject.value;\r\n  }\n\n  getUserDetail(userEmail: string) {\n    return this._http.get<User>(`${window.location.origin}/users/${userEmail}`);\n  }\n\r\n  login(userEmail: string) {\r\n    return this._http.post<User>(`${window.location.origin}/users/authenticate?userEmail=${userEmail}`, {})\r\n      .pipe(map(user => {\r\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        this.userSubject.next(user);\r\n        return user;\r\n      }));\r\n  }\n\n  register(user: User) {\r\n    return this._http.post(`${window.location.origin}/users/register`, user);\r\n  }\n\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.userSubject.next(null);\r\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';  \nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';  \nimport { Message } from '../models/message';  \n\n@Injectable()  \nexport class ChatService {  \n  messageReceived = new EventEmitter<Message>();  \n  connectionEstablished = new EventEmitter<Boolean>();  \n\n  private connectionIsEstablished = false;  \n  private _hubConnection!: HubConnection;  \n\n  constructor() {  \n    //this.createConnection();  \n    //this.registerOnServerEvents();  \n    //this.startConnection();  \n  }  \n\n  sendMessage(message: Message) {  \n    this._hubConnection.invoke('NewMessage', message);  \n  }  \n\n  private createConnection() { \n    this._hubConnection = new HubConnectionBuilder()  \n      .withUrl(window.location.href + 'MessageHub')  \n      .build();  \n  }  \n\n  private startConnection(): void {  \n    this._hubConnection  \n      .start()  \n      .then(() => {  \n        this.connectionIsEstablished = true;  \n        console.log('Hub connection started');  \n        this.connectionEstablished.emit(true);  \n      })  \n      .catch(err => {  \n        console.log('Error while establishing connection, retrying...');  \n        setTimeout( () => { this.startConnection(); }, 5000);  \n      });  \n  }  \n\n  private registerOnServerEvents(): void {  \n    this._hubConnection.on('MessageReceived', (data: any) => {  \n      this.messageReceived.emit(data);  \n    });  \n  }  \n}    \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}