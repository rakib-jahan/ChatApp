{"version":3,"sources":["../$_lazy_route_resource lazy namespace object","./app/account/login.component.ts","./app/account/login.component.html","./app/account/register.component.ts","./app/account/register.component.html","./app/app-routing.module.ts","./app/app.component.ts","./app/app.component.html","./app/app.module.ts","./app/home/home.component.ts","./app/home/home.component.html","./app/models/message.ts","./app/services/account.service.ts","./app/services/chat.service.ts","./environments/environment.ts","./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n    loginForm: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    isError = false;\r\n    returnUrl: string;\r\n    errorMsg: string;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {\r\n        if (this.accountService.getUserInfo) {\r\n            this.router.navigate(['/']);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.loginForm = this.formBuilder.group({\r\n            userEmail: ['a@gmail.com', [Validators.required, Validators.email]]\r\n        });\r\n\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.loginForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        if (this.loginForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.login(this.f.userEmail.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate([this.returnUrl]);\r\n                },\r\n                error => {\r\n                    this.isError = true;\r\n                    this.errorMsg = error.error.message;\r\n                    this.loading = false;\r\n                });\r\n    }\r\n\r\n    onKeyUpEvent(event: any) {\r\n        this.isError = false;\r\n        this.errorMsg = '';\r\n    }\r\n}\r\n","<div class=\"row d-flex justify-content-center mt-5\">\r\n  <div class=\"card col-5\">\r\n    <div class=\"card-body pb-0\">\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label>Email</label>\r\n          <input type=\"text\" formControlName=\"userEmail\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userEmail.errors }\" placeholder=\"Ex : abc@gmail.com\" (keyup)=\"onKeyUpEvent($event)\" />\r\n          <div *ngIf=\"submitted && f.userEmail.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.userEmail.errors.required\">Email is required</div>\r\n            <div *ngIf=\"f.userEmail.errors.email\">Email must be a valid email address</div>\r\n          </div>\r\n          <div *ngIf=\"submitted && isError\" class=\"custom-invalid-feedback\">\r\n            {{errorMsg}}\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Login\r\n          </button>\r\n          <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n@Component({ templateUrl: 'register.component.html' })\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    loading = false;\r\n    submitted = false;\r\n    registerForm: FormGroup;\r\n    isError = false;\r\n    showMsg: string;\r\n    isSuccess = false;\r\n    showAlert: boolean;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n    ) {\r\n        if (this.accountService.getUserInfo) {\r\n            this.router.navigate(['/']);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.registerForm = this.formBuilder.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', [Validators.required, Validators.email]]\r\n        });\r\n    }\r\n\r\n    get f() { return this.registerForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        if (this.registerForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.register(this.registerForm.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.isSuccess = true;\r\n                    this.showMsg = 'User created';\r\n                    this.loading = false;\r\n                    this.showAlert = true;\r\n                    //this.router.navigate(['/login'], { relativeTo: this.route });\r\n                },\r\n                error => {\r\n                    this.isError = true;\r\n                    this.showMsg = error.error.message;\r\n                    this.loading = false;\r\n                    this.showAlert = true;\r\n                });\r\n    }\r\n\r\n    onReset() {\r\n        this.submitted = false;\r\n        this.registerForm.reset();\r\n    }\r\n\r\n    closeAlert() {\r\n        this.showAlert = !this.showAlert;\r\n    }\r\n}\r\n","<div class=\"row d-flex justify-content-center mt-5\">\r\n    <div class=\"card m-3\">\r\n        <div class=\"card-body pb-0\">\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-6\">\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n                        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group col-6\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n                        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                        <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                        Register\r\n                    </button>\r\n                    <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row d-flex justify-content-center\">\r\n    <div *ngIf=\"showAlert\" class=\"alert col-5\" [ngClass]=\"{'alert-danger' : isError, 'alert-success ' : isSuccess}\">\r\n        <button (click)=\"closeAlert()\" type=\"button\" class=\"close\">&times;</button>\r\n        {{showMsg}} <a *ngIf=\"isSuccess\" routerLink=\"../login\" class=\"alert-link\"> Go to login</a>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './account/login.component';\r\nimport { RegisterComponent } from './account/register.component';\r\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\r\nimport { User } from './models/user';\r\nimport { AccountService } from './services/account.service';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chat-app';\n  user: User;\n\n  constructor(private accountService: AccountService, private router: Router) {\n    this.accountService.user.subscribe(x => this.user = x);\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <span class=\"navbar-brand mb-0 h1\">Chat-demo application</span>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\" *ngIf=\"user\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n        </ul>\r\n        <span class=\"navbar-text\">\r\n            {{user.firstName}} {{user.lastName}}\r\n        </span>\r\n\r\n        <button (click)=\"logout()\" type=\"button\" class=\"btn btn-outline-info btn-sm ml-2\">Logout</button>\r\n    </div>\r\n</nav>\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './account/login.component';\r\nimport { RegisterComponent } from './account/register.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ChatService } from './services/chat.service';\r\nimport { AccountService } from './services/account.service';\r\nimport { HashLocationStrategy, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        LoginComponent,\r\n        RegisterComponent\n    ],\n    imports: [\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n        AppRoutingModule,\n        ReactiveFormsModule,\n        FormsModule,\n        HttpClientModule\n    ],\n    providers: [ChatService, AccountService, { provide: LocationStrategy, useClass: HashLocationStrategy }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Message } from '../models/message';\r\nimport { ChatService } from '../services/chat.service';\r\nimport { AccountService } from '../services/account.service';\r\nimport { User } from '../models/user';\r\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\r\n\r\n@Component({\r\n    templateUrl: 'home.component.html',\r\n    styleUrls: ['home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n    title = 'ClientApp';\r\n    txtMessage: string = '';\r\n\r\n    messages = new Array<Message>();\r\n    message = new Message();\r\n\r\n    user: User;\r\n    chatUser: User;\r\n    onlineUser = Array<User>();\r\n\r\n    private _hubConnection: HubConnection;\r\n\r\n    constructor(private accountService: AccountService, private chatService: ChatService, private router: Router) {\r\n        this.user = this.accountService.getUserInfo;\r\n        if (!this.user) {\r\n            this.router.navigate(['/login']);\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.signalrConn();\r\n    }\r\n\r\n    sendMessage(): void {\r\n        if (this.txtMessage) {\r\n            this.message = new Message();\r\n            this.message.senderId = this.user.id;\r\n            this.message.receiverId = this.chatUser.id;\r\n            this.message.senderConnectionId = this.user.connectionId;\r\n            this.message.receiverConnectionId = this.chatUser.connectionId;\r\n            this.message.type = \"sent\";\r\n            this.message.message = this.txtMessage;\r\n            this.message.date = new Date();\r\n            this.messages.push(this.message);\r\n            this._hubConnection.invoke('SendMessageToUser', this.message);\r\n            this.txtMessage = '';\r\n        }\r\n    }\r\n\r\n    selectUser(user) {\r\n        this.chatUser = user;\r\n        this.chatLog();\r\n    }\r\n\r\n    chatLog() {\r\n        this.messages = [];\r\n        this.chatService.getChatLog(this.user.id, this.chatUser.id)\r\n            .subscribe(\r\n                response => {\r\n\r\n                    if (response != null) {\r\n                        var chatLog = response;\r\n\r\n                        if (chatLog.length > 0) {\r\n                            this.messages = [];\r\n\r\n                            chatLog.forEach((chat: Message) => {\r\n                                if (chat.senderId == this.user.id) {\r\n                                    chat.type = \"sent\";\r\n                                }\r\n                                else {\r\n                                    chat.type = \"received\";\r\n                                }\r\n\r\n                                this.messages.push(chat);\r\n                            });\r\n                        }\r\n                    }\r\n                }, error => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    }\r\n\r\n    signalrConn() {\r\n\r\n        this._hubConnection = new HubConnectionBuilder()\r\n            .withUrl(`${window.location.origin}/MessageHub?email=${this.user.email}`)\r\n            .build();\r\n\r\n        this._hubConnection.on('UpdateUserList', (onlineuser) => {\r\n            var users = JSON.parse(JSON.stringify(onlineuser));\r\n            users.forEach((user: User) => {\r\n                if (user.email !== this.user.email && !this.onlineUser.some(r => r.email === user.email)) {\r\n                    this.onlineUser.push(user);\r\n                }\r\n                else {\r\n                    this.user.connectionId = user.connectionId;\r\n                    this.user.isConnected = user.isConnected;\r\n                }\r\n            });\r\n        });\r\n\r\n        this._hubConnection.on('ReceivedMessage', (message: Message) => {\r\n            message.type = \"received\";\r\n            this.messages.push(message);\r\n        });\r\n\r\n        this._hubConnection\r\n            .start()\r\n            .then(function () {\r\n                console.log(\"Connected\");\r\n            }).catch(function (err) {\r\n                return console.error(err.toString());\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._hubConnection)\r\n            this._hubConnection\r\n                .stop()\r\n                .then(function () {\r\n                    console.log(\"Stopped\");\r\n                }).catch(function (err) {\r\n                    return console.error(err.toString());\r\n                });\r\n    }\r\n}","<div class=\"row d-flex justify-content-center mt-5\" style=\"height:500px;\">\r\n    <div class=\"col-2 pt-3 border\">\r\n        <div *ngFor=\"let user of onlineUser\">\r\n            <div class=\"d-flex mb-2\" style=\"cursor: pointer;\" (click)=\"selectUser(user)\">\r\n                <div class=\"position-relative w-12 h-12\">\r\n                    <img class=\"rounded-full border border-gray-100 shadow-sm\" src=\"avatar.png\" alt=\"user image\" />\r\n                    <div class=\"absolute top-0 right-0 h-3 w-3 my-1 border-2 border-white rounded-full bg-green-400 z-2\"></div>\r\n                </div>\r\n                <span class=\"align-self-center ml-2 text-muted h6\">{{user.firstName}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-6 border border-left-0 pr-0\">\r\n        <div style=\"height: 450px;overflow-y: auto;overflow-x: hidden;\" class=\"pt-3 pr-1\">\r\n            <div *ngFor=\"let msg of messages\">\r\n                <div class=\"row\" *ngIf=\"msg.type == 'received'\">\r\n                    <div class=\"col\">\r\n                        <div class=\"alert alert-warning float-left\">\r\n                            <span class=\"d-block\" style=\" font-weight: 500;\">{{msg.message}}</span>\r\n                            <span class=\"d-block text-secondary\" style=\" font-weight: 400; font-size: 12px;\">\r\n                                <span><em>{{msg.date | date:'medium'}}</em></span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" *ngIf=\"msg.type == 'sent'\">\r\n                    <div class=\"col\">\r\n                        <div class=\"alert alert-info float-right\">\r\n                            <span class=\"d-block\" style=\" font-weight: 500;\">{{msg.message}}</span>\r\n                            <span class=\"d-block text-info\" style=\" font-weight: 400; font-size: 12px;\">\r\n                                <span><em>{{msg.date | date:'medium'}}</em></span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row pt-1\">\r\n            <div class=\"col pr-0\">\r\n                <input class=\"form-control\" type=\"text\" [value]=\"txtMessage\" (input)=\"txtMessage=$event.target.value\"\r\n                       (keydown.enter)=\"sendMessage()\" placeholder=\"Type a message\" />\r\n            </div>\r\n            <button [disabled]=\"!chatUser\" type=\"button\" (click)=\"sendMessage()\" class=\"btn btn-primary mr-4\">Send</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","export class Message {\r\n    id: number;\r\n    senderId: number;\r\n    receiverId: number;\r\n    senderConnectionId: string;\r\n    receiverConnectionId: string;\r\n    type: string;\r\n    message: string;\r\n    date: Date;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { throwError as observableThrowError, Observable, BehaviorSubject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { User } from '../models/user';\r\nimport { Router } from '@angular/router';\r\n\n\n@Injectable()\nexport class AccountService {\n\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\n\n    constructor(\r\n        private router: Router,\r\n        private _http: HttpClient\r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n    }\n\n    setUserInfo(user: User) {\n        localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    public get getUserInfo(): User {\r\n        return this.userSubject.value;\r\n    }\n\n    getUserDetail(userEmail: string) {\n        return this._http.get<User>(`${window.location.origin}/users/${userEmail}`);\n    }\n\r\n    login(userEmail: string) {\r\n        return this._http.post<User>(`${window.location.origin}/users/authenticate?email=${userEmail}`, {})\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                this.userSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\n\n    register(user: User) {\r\n        return this._http.post(`${window.location.origin}/users/register`, user);\r\n    }\n\n    logout() {\r\n        localStorage.removeItem('user');\r\n        this.userSubject.next(null);\r\n    }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Message } from '../models/message';\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n\r\n    constructor(private _http: HttpClient) {\r\n    }\r\n\r\n    getChatLog(senderId: number, receiverId: number) {\r\n        return this._http.get<Message[]>(`${window.location.origin}/chats/chatLog?senderId=${senderId}&receiverId=${receiverId}`);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}